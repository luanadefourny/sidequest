FORMAT: 1A
HOST: http://localhost:3000

# SideQuest API
API for users and quests. During design, use Apiary's Mock and Proxy. Set `HOST` to your real server later.

# Data Structures
## User (object)
+ _id: `64f1a2b3c4d5e6f7a8b9c0d1` (string)
+ username: `johndoe` (string)
+ email: `john@doe.com` (string)
+ firstName: `John` (string)
+ lastName: `Doe` (string)
+ age: 27 (number)
+ isCurrent: true (boolean)

## RegisterUserData (object)
+ username (string, required)
+ email (string, required)
+ password (string, required)
+ firstName (string, required)
+ lastName (string, required)
+ age (number, required)

## LoginUserData (object)
+ username (string, required)
+ password (string, required)

# Group Users

## List users [GET /users]
Returns all users.

+ Response 200 (application/json)
    + Attributes (array[User])

## Register user [POST /users]
Creates a new user.

+ Request (application/json)
    + Attributes (RegisterUserData)

+ Response 201 (application/json)
    + Attributes (User)

+ Response 400 (application/json)
    + Attributes (object)
        + error: `username already exists` (string)

+ Response 500 (application/json)
    + Attributes (object)
        + error: `Failed to register user` (string)

## Login user [PUT /users]
Logs in an existing user and marks `isCurrent` true.

+ Request (application/json)
    + Attributes (LoginUserData)

+ Response 200 (application/json)
    + Attributes (User)

+ Response 401 (application/json)
    + Attributes (object)
        + error: `Password is incorrect` (string)

+ Response 404 (application/json)
    + Attributes (object)
        + error: `User not found` (string)

+ Response 500 (application/json)
    + Attributes (object)
        + error: `Failed to login` (string)